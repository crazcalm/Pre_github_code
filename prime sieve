"""
The Sieve of Eratosthenes

1. Create a list of consecutive integers from 2 to n

2. initially, let p equal 2, the first prime number

3. Starting from p, count up in increments of p and mark each of these numbers greater than p itself 
   in the list. These will be multiples of p: 2p, 3p, 4p, etc.; note that some of them may have already
   been marked.
   
4. find the first number greater than p in the list that is not marked. If there was no such number, stop.
   Otherwise, let p now equal this number (which is the next prime), and repeat step 3.
   
   When the algorithm terminates, all the numbers in the list that are not marked are prime.
"""

def Eratosthenes(number):
    
    number = int(number)
    
    list = range(3, number +1,2)
    list.insert(0, 2)
    
    count = 0
    
    while count <len(list):
        
        prime = list[count]
        
        for x in list:
            
            if x % prime == 0 and x != prime:
                
                list.remove(x)
                
        count += 1
        
    print list
    return list

x = raw_input("Give me a natural number greater than 2: ")

Eratosthenes(x)
